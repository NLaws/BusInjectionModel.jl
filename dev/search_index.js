var documenterSearchIndex = {"docs":
[{"location":"methods/#Methods","page":"Methods","title":"Methods","text":"","category":"section"},{"location":"methods/","page":"Methods","title":"Methods","text":"build_bim!","category":"page"},{"location":"methods/#BusInjectionModel.build_bim!","page":"Methods","title":"BusInjectionModel.build_bim!","text":"build_bim!(m::JuMP.AbstractModel, net::Network, mtype::ModelType=FixedPointLinear)\n\nTop-level model builder that dispatches the ModelType enum\n\n\n\n\n\nbuild_bim!(m::JuMP.AbstractModel, net::Network{SinglePhase}, ::Val{Unrelaxed})\n\nModel builder for single-phase, unrelaxed BIM. See the      Single Phase Bus Injection Model (Unrelaxed) math for details.\n\n\n\n\n\n","category":"function"},{"location":"math/#Single-Phase-Bus-Injection-Model-(Unrelaxed)","page":"Math","title":"Single Phase Bus Injection Model (Unrelaxed)","text":"","category":"section"},{"location":"math/","page":"Math","title":"Math","text":"Notation:","category":"page"},{"location":"math/","page":"Math","title":"Math","text":"s_j net complex power injection at node j\nmathcalN set of all nodes in network\nv_j voltage at node j","category":"page"},{"location":"math/","page":"Math","title":"Math","text":"beginaligned\ns_j = sum_k j sim k Yjk^* ( v_j^2 - v_j v_k^*)  forall j in mathcalN \nv_textsubstation bus = v_0\nendaligned","category":"page"},{"location":"#BusInjectionModel.jl","page":"User Documentation","title":"BusInjectionModel.jl","text":"","category":"section"},{"location":"","page":"User Documentation","title":"User Documentation","text":"Documentation for BusInjectionModel.jl","category":"page"},{"location":"","page":"User Documentation","title":"User Documentation","text":"A work-in-progress package for optimal power flow (OPF) models based on the bus injection model.","category":"page"},{"location":"","page":"User Documentation","title":"User Documentation","text":"This package is part of a federation of packages to support OPF modeling:","category":"page"},{"location":"","page":"User Documentation","title":"User Documentation","text":"CommonOPF provides the basis for BusInjectionModel.jl and:\nBranchFlowModel, which provides a similar interface to BusInjectionModel.jl.","category":"page"},{"location":"","page":"User Documentation","title":"User Documentation","text":"using BusInjectionModel\nusing CommonOPF\nusing JuMP\nusing Ipopt\n\nm = JuMP.Model(Ipopt.Optimizer)\nnet = CommonOPF.Network(\"path/to/network/yaml-or-opendss-file\")\nBusInjectionModel.build_bim!(m, net, Unrelaxed)\n# set objective\noptimize!(m)","category":"page"}]
}
